# List 10 most recently modified items in directory.
function lh {
  ls -lt "$@" | head -10;
}

function mcd {
  mkdir "$@" && cd "$_";
}

# Commit pending changes with args as message.
# e.g.: gc Fix ICBM launch bug.
#
# Ignore a trailing full stop.
function gc {
  if [ -n "$*" ]; then
    msg="$*"
    [ "${msg: -1:1}" == '.' ] && msg="${msg:0:-1}"
    git commit -m "$msg"
  else
    git commit
  fi
}
function gca {
  if [ -n "$*" ]; then
    msg="$*"
    [ "${msg: -1:1}" == '.' ] && msg="${msg:0:-1}"
    git add -A && git commit -m "$msg"
  else
    git add -A && git commit
  fi
}

# https://github.com/fiorix/freegeoip#readme
function geoip {
  curl http://freegeoip.net/json/$1
}

# Crypto
# http://tombuntu.com/index.php/2007/12/12/simple-file-encryption-with-openssl/
function encrypt {
  openssl aes-256-cbc -salt -in "$@" -out "$@".enc
}
function decrypt {
  openssl aes-256-cbc -d -salt -in "$@" -out "$@".original
}

# Copy Last Commit's SHA.
# The process substitution lets me send the output of cut to both
# pbcopy and standard out (the console in this case).
function clc {
  # git rev-parse --verify HEAD | cut -c1-7 | tr -d "\n" | tee >(pbcopy)
  git rev-parse --verify HEAD | cut -c1-7 | tr -d "\n" | pbcopy
}

# Sum a column of numbers.  E.g. ls -l | sumcol 5
function sumcol {
  awk "{sum += \$$1}; END {print sum}"
}

# open most recent rails migration
function mm {
  mvim db/migrate/$(ls -1 db/migrate/ | tail -1)
}

# http://blog.55minutes.com/2012/01/invoke-rails-and-rake-faster-and-with-fewer-mistakes/
# https://github.com/Z1MM32M4N/vim-superman
vman() {
  vim -c "SuperMan $*"

  if [ "$?" != "0" ]; then
    echo "No manual entry for $*"
  fi
}

# vim: ft=sh
