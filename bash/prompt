# Keep command history from all tabs/windows.
# - http://briancarper.net/blog/248
# - http://stackoverflow.com/questions/103944/real-time-history-export-amongst-bash-terminal-windows
shopt -s histappend


# Prompt.  Looks like:
#
#   /path/to/current/directory/
#   $ 
#
# If we are in a Git repo the current branch and HEAD are shown like this:
#
#   /path/to/current/directory/  (branch_name)  abcd1234
#   $ 
#
# __git_ps1 is set up by the git-prompt.sh script bundled
# with the Git source.
#
#
# COLOURS
#
# Format: \[<sequence>\]
#
# 16-colour sequence: ESC[<code>m where <ESC> is \033
#
# 256-colour sequence: ESC[38;5;<fgcode>m and ESC<48;5;<bgcode>m
# 
# 256-colour codes are:
#
# 0x00-0x07: standard colors (as in ESC [ 30..37 m)
# 0x08-0x0F: high intensity colors (as in ESC [ 90..97 m)
# 0x10-0xE7: 6*6*6=216 colors: 16 + 36*r + 6*g + b (0≤r,g,b≤5)
# 0xE8-0xFF: grayscale from black to white in 24 steps
#
# See http://unix.stackexchange.com/a/124409/88207
#
 GREEN="\[\033[32m\]"
 RESET="\[\033[0m\]"
   RED="\[\033[31m\]"
YELLOW="\[\033[33m\]"
  CYAN="\[\033[38;5;103m\]"
  BLUE="\[\033[38;5;4m\]"

# (*) unstaged changes
# (+) staged changes
GIT_PS1_SHOWDIRTYSTATE=1
# ($) stashed changes
GIT_PS1_SHOWSTASHSTATE=1
# (%) untracked files
GIT_PS1_SHOWUNTRACKEDFILES=1

source /usr/local/etc/bash_completion.d/git-prompt.sh

git_head='git rev-parse --short HEAD 2>/dev/null'

function build_prompt {
  last="$?"
  if [ `uname` = "Darwin" ]; then
    if [ "$last" -eq 0 ]; then
      PS1="\n$BLUE\w/  $CYAN\$(__git_ps1)   $BLUE\$($git_head)\n$GREEN$ $RESET"
    else
      PS1="\n$BLUE\w/  $CYAN\$(__git_ps1)   $BLUE\$($git_head)\n$RED$ $RESET"
    fi
  else
    export PS1="\n$RED\w/  \$(__git_ps1)\n$ $RESET"
  fi
}

PROMPT_COMMAND="build_prompt; history -a"
